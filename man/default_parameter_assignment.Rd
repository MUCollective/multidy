% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/default_parameter_assignment.R
\name{default_parameter_assignment}
\alias{default_parameter_assignment}
\alias{default_parameter_assignment.multiverse}
\alias{default_parameter_assignment.Multiverse}
\alias{default_parameter_assignment<-}
\alias{default_parameter_assignment<-.multiverse}
\title{Retrieve or change the default analysis of the multiverse}
\usage{
default_parameter_assignment(multiverse)

\method{default_parameter_assignment}{multiverse}(multiverse)

\method{default_parameter_assignment}{Multiverse}(multiverse)

default_parameter_assignment(multiverse) <- value

\method{default_parameter_assignment}{multiverse}(multiverse) <- value
}
\arguments{
\item{multiverse}{The multiverse object}

\item{value}{a named list or integer. The named list should consist of all the \emph{parameters}, and an \emph{option name} assigned to each.
The integer indicates the corresponding position in the multiverse table which will be used as the default assignment.}
}
\description{
Functions which allow the user to retrieve or update the default assignments for
each parameter defined in the multiverse. Retrieving the default analysis allows the users 
to see what the default analysis would look like (what values each parameter would take). Updating
the default analysis allows the users to specify a different set of parameter assignments which will
be executed.
}
\examples{
\dontrun{
M <- multiv
inside(M, {
  df <- data.frame( x = sample(1:100, 50, replace = TRUE)
  
  df <- df \%>\%
   mutate( y = branch(
    value_y, 
    "zero" ~ 0,
    "three" ~ 3,
    "x + 1" ~ x + 1,
    "x-squared" ~ x^2
  ))
})

default_parameter_assignment(M)
# the code above will return a list: value_y = zero

default_parameter_assignment(M) <- 3
default_parameter_assignment(M) <- list(value_y = "x + 1")
# both of these will change the default parameter assignment to "x + 1"
}

}
